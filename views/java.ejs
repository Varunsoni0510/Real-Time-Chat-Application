<!DOCTYPE html>
<html>
  <head>
    <title><%= title %></title>
    <link rel='stylesheet' href='/stylesheets/style.css' />
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/remixicon/3.5.0/remixicon.css">
    
  </head>
  <body>
    <main>
      <nav>
        <h3 class="logo"><img src="/images/logo.png" alt="" /></h3>
        <span>
          <a href="/howtouse">How to use</a>
          <a href="/about">about</a>
        </span>
      <header>
        <div class="title">
          <img src="" alt="" width="35px" />
          <h1>Java Developer(Internship)</h1>
        </div>

          <a href="/">Homepage</a>

      </header>
      <div class="container">
        <div class="users-window">
          <div class="users-head">
            <h3>Active people</h3>
            <h4 class="users-count">0</h4>
          </div>
          <div class="users-list"></div>
        </div>
        <div class="chat-window">
          <div class="chats"></div>
          <div class="user-input">
            <input type="text" id="user-msg" placeholder="type your message" />
            <button type="button" id="user-send">Send</button>
          </div>
        </div>
      </div>
    </main>


    <script src="/socket.io/socket.io.js"></script>
  <script>
    var socket = io("/java")

var username;
var chats = document.querySelector(".chats");
var users_list = document.querySelector(".users-list");
var users_count = document.querySelector(".users-count");
var msg_send = document.querySelector("#user-send");
var user_msg = document.querySelector("#user-msg");

do {
  username = prompt("enter username");
} while (!username);

// it will be called when user will joined
socket.emit("new-user-join", username);

//notifying that user is joined
socket.on("user-connected", function (socket_name) {
  userJoinLeft(socket_name, "joined");
});

// function  to create  joined / left status div
function userJoinLeft(name, status) {
  let div = document.createElement("div");
  div.classList.add("user-join");
  let content = `<p><b>${name}</b>${status} the chat</p>`;
  div.innerHTML = content;
  chats.appendChild(div);
  chats.scrollTop = chats.scrollHeight;
}

// function  to create  joined / left status div

socket.on("user-disconnected", function (user) {
  userJoinLeft(user, "left");
});

// for updating users lists and userscount
socket.on("user-list", function (users) {
  users_list.innerHTML = "";
  users_arr = Object.values(users);
  for (i = 0; i < users_arr.length; i++) {
    let p = document.createElement("p");
    p.innerText = users_arr[i];
    users_list.appendChild(p);
  }
  users_count.innerHTML = users_arr.length;
});

//for sending message

msg_send.addEventListener("click", function () {
  let data = {
    user: username,
    msg: user_msg.value,
  };
  if (user_msg.value != "") {
    appendMessage(data, "outgoing");
    socket.emit("message", data);
    user_msg.value = "";
  }
});

function appendMessage(data, status) {
  let div = document.createElement("div");
  div.classList.add("message", status);
  let content = `
    <h5>${data.user}</h5>
    <p>${data.msg}</p>
    `;
  div.innerHTML = content;
  chats.appendChild(div);
  chats.scrollTop = chats.scrollHeight;
}

socket.on("message", function (data) {
  appendMessage(data, "incoming");
});

  </script>
  
  </body>
</html>
